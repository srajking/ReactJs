الطريقة لانشاء ملف رياكت جديد من خلال الخطوات التالية 

1- من خلال التيرمنال اكتب الامر التالي 
    npx create-react-app my-app
شرح الامر 
    الشيء الاساسي ان هذا الامر يعمل على النسخ القديمة بشكل اساسي 
    لذالك دائما يكون اخذ الاوامر من الموقع الرسمي للغة لتجنب اي مشاكل 
    في التطبيق 
    npx create-next-app@latest my-app 
    هذا امر انشاء المشروع الجديد من هذا الاصدار 
    


    شرح المجلدات التي تنشئها رياكت عند بدأ اول المشروع 

    node_modules
    هو الملف الاساسي الذي يحوي على كل المكاتب 
    التي تحتاجها اللغة للعمل بشكل صحيح 

    public
    المحلد الذي يحوي على الموارد مثل الصور والصوت التي لا تتغير 
    اي امتدادات توضع فيها 

    src
    الملف الاهم تقريبا يحوي على الملفات الجاهزه للتطبيق 
    لكل ملف مهم منها 

    .gitignore
    الملف يتعامل مع السيرفر الملفات التي لا تريد رفعها او تجاهلها عند
    رفع المشروع على الانترنت او على الخزن السحابي 

    packag-lock.json
    package.json
    هذه الملفات تحدد لكل المكتبات المستخدمة الاصدارات التي تقوم
    بأستخدامها في المشروع الخاص بك 
    وينفع للعمل مع المجموعات 

    لتشغيل المشروع 
    npm run start

    عند التشغيل الملف الذي سوف يقوم بعرضه المتصفح هو
    App.js
    بشكل اساسي 
    _________________________________________________________

    render : موجود في ملف الاساسي للجافا سكريبت حيث معناه انه يقوم بادخال ما ينسب اليه 
            من غير صفحات مثل الحقن 
    

    ملحوظه مهمه جدا 
    اي 
    commpountet 
    في react
    يقوم بأرجاع قيمة واحده فقط او عنصر واحد فقط هنا يجب علينا 
    ان نجمع جميع عناصر التي نريد ان نكتبها داخل 
    عنصر واحد لكي يعمل بشكل ممتاز وصحبح

    عند استخدام الدوال الو الكوبونوت يجب استيرادها بالطرقة 
    التالية 
    import MyFirstComponent from "./MyFirstComponent"

    وايضا يجب تصديرها من الملف نفسها كما سوف يذكر الان 
    export default اسم الدالة 
    تكتب العباره بالاعلى قبل الدالة وقبل المحتوى الذي سوف تقوم 
    بأستخدامها

    {} يمكن تضمين جافا سكريبت من خلال هذه الاقواس 
    في كود ال html
    _________________________________________________________

    بعض الملاحظات لكتابة التنسيق في 
    jsx
    1- لا تكتب التنسيقات بين علامات التنصيص لانها تعتبر كلمات 
    2- ايضا العمليات على العناصر مثلا 
    onClick
    وغيرها من العمليات 
    يجب ان تكتب بطريقة الكملكيس 
    بعد كتابتها لا توضع استدعاها بين علامات التنصيب تكون بالشكل 
    onClick={العملية المراد تنفيذها}
    وعلى الاغلب اذا استدعيت اي دالة لا تحتاج الى وضع الاقواس الخاصة بالدالة 
    لانها سوف تسبب لك مشكلة في التنفيذ 

    * اما بالنسبة للتنسيقات الخاصة بال 
    css  
    الامر يختلف فيجب ان يكون ما يلي 
    style = {هنا يكون اوبحكت جافا سكريبت كما سوف يوضح في الاسفل}
    هكذا يكون الاوبجكت 
    const elmStyle = 
    {
        backgroundClore: "red",
    }
    يكون التنفيذ كما يلي 
    style = {elmStyle}
    بهذا الشكل سوف تنفذ القيمة 

    وايضا يمكن كتابتها كما يلي 
    style={{ color: "red", backgroundColor: "blue" }}
    لكن مع الملاحظه ان هناك اكثر من قوس واحد هذا هو التغير بين الطريقتين 
    
    _________________________________________________________
    عند اضافة اسماء الكلاسات للتنسيق يكون بالشكل التالي 
    <h3 className={"solo"}>{person.name}</h3>
    وعلى هذا الامر يقاس بقية الكلاسات لجميع العناصر 
    ونفس الامر اذا كان اكثر من كلاس يفصل بينها المسافة 

     الربط بين الملفات والتنسيقات و الكلاسات ايضا عن طريق ملف خارجي خاص
     بالتسيقات 

     عند تضمين الكلاسات داخل الاقوام لكي تنسب الى الجافا سكريبت استطيع ان استخدم 
     الجافا سكريبت مع الكلاسات كما سوف يوضح الان 
     <h1 className={person.name == "Siraj" ? "solo" : "one"}>Check Name</h1>
     هنا عن طريق الاوبجكت قمت بفحص هل يساوي الاسم كذا اسم اذا كان نعم 
     سوف يقوم بأضافة الكلاس عن طريق دالة اف الشرطية المختصره واذا لم يكن يساوي 
     سيقوم باضافة كلاس اخر 